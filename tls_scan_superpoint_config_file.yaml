data:
    dataset: 'TLSScanData'
    generate_label: true
    labels: false
    label_path: '../pytorch-superpoint/datasets/TLS_Train/Label'
    # labels: "logs/magicpoint_tls_labels/predictions"
    root: '../pytorch-superpoint/datasets/TLS_Train' # datasets/COCO
    detector_training: false
    gaussian_label:
        enable: true
        sigma: 1.0
        params:
            GaussianBlur: {sigma: 0.2}
    cache_in_memory: false
    preprocessing:
        resize: [320, 216]  # width, height
        # resize: [480, 640]
    augmentation:
        photometric:
            enable: false
            primitives: [
                'random_brightness', 'random_contrast', 'additive_speckle_noise',
                'additive_gaussian_noise', 'additive_shade', 'motion_blur']
            params:
                random_brightness: {max_abs_change: 30}
                random_contrast: {strength_range: [0.5, 1.5]}
                additive_gaussian_noise: {stddev_range: [0, 10]}
                additive_speckle_noise: {prob_range: [0, 0.0035]}
                additive_shade:
                    transparency_range: [-0.5, 0.5]
                    kernel_size_range: [100, 150]
                motion_blur: {max_kernel_size: 3}
        homographic:
            enable: true
            num: 5 # 100
            aggregation: 'sum'
            filter_counts: 0
            homographies:
                params:
                    translation: true
                    rotation: true
                    scaling: false
                    perspective: true
                    scaling_amplitude: 1
                    perspective_amplitude_x: 0.3
                    perspective_amplitude_y: 0.3
                    allow_artifacts: true
                    patch_ratio: 0.85
                    max_angle: 0.785
        valid_border_margin: 3

front_end_model: 'Train_model_heatmap'  # 'Train_model_frontend'

training:
    workers_train: 2 # 16
    workers_val: 2 # 2

model:
    # name: 'magic_point'
    # name: 'SuperPointNet_heatmap'
    name: 'SuperPointNet_pretrained'
    params: {
    }
    detector_loss:
        loss_type: 'softmax'
    batch_size: 1 # 32
    eval_batch_size: 1 # 32
    learning_rate: 0.0001 # 0.0001
    detection_threshold: 0.015 # 0.015
    lambda_loss: 1 # 1
    nms: 4
    dense_loss:
        enable: false
        params:
            descriptor_dist: 4 # 4, 7.5
            lambda_d: 800 # 800
    sparse_loss:
        enable: true
        params:
            num_matching_attempts: 1000
            num_masked_non_matches_per_match: 100
            lamda_d: 1
            dist: 'cos'
            method: '2d'
            positive_margin: 1
            negative_margin: 0.2
    other_settings: 'train 2d, gauss 0.2'

retrain: True # set true for new model
reset_iter: True # set true to set the iteration number to 0
train_iter: 10 # 170000
validation_interval: 200 # 2000
tensorboard_interval: 200 # 200
save_interval: 200 # 2000
validation_size: 5

pretrained: "../my_superpoint_pytorch/superpoint_v1.pth"



